//Importing the necessary functions from the redux toolkit library
import { createSlice } from '@reduxjs/toolkit';
import { nanoid } from 'nanoid';

//Define initial state
const initialTodoState = {
    nextId: 2,
    data: {
        1: {
            content: 'Content 1',
            completed: false,
        },
    },
};

//Defining the reducer using createSlice
const todoSlice = createSlice({
    //Name of the slice
    name: 'todos',
    initialState: initialTodoState, //Initial state of the slice
    reducers: {
        //An action to add a new todo item
        addTodo: {
            reducer: (state, action) => {
                // Destructure the payload to get the ID and content of the new item
                const { id, content} = action.payload;
                // Incrememt the next ID for new items
                state.nextId++;
                // Add the new item to the data object with its ID as the key
                state.data[id] = {
                    content,
                    completed: false,
                };
            },
            //A prepare function to generate a unique ID for each new item
            prepare: (content) => {
                return { payload: { id: nanoid(), content } };
            },
        },
        //An action to delete a todo item
        deleteTodo: (state, action) => {
            //Remove the item with the specified ID from the data object
            delete state.data[action.payload];
        },
        //An action to edit the content of a todo item
        editTodo: (state, action) => {
            //Destructure thw payload to get the ID and new content of the item
            const { id, newContent } = action.payload;
            //Update the content of the item with the specified ID
            state.data[id].content = newContent;
        },
        //An action to toggle the completed status of a todo item
        toggleCompleted: (state, action) => {
            //Destructure the payload to get the ID of the item
            const { id } = action.payload;
            //Invert the completed status of the item with the specified ID
            state.data[id].completed = !state.data[id].completed;
        },
    },
});

//Export the action created by createSlice for use in other parts of the application
export const { addTodo, deleteTodo, editTodo, toggleCompleted } = todoSlice.actions;

//Export the reducer generated by createSlice
export default todoSlice.reducer;